@model ShiftWeekViewModel
<div class="p-0 admin-dashboard mt-4 table-responsive">
    <table class="table mt-4  table-bordered">

        <colgroup>
            <col span="1" style="width: 15%">
            @for (int i = 0; i < 24; i++)
            {
                <col span="1" style="width: 3.54% !important;">
            }
        </colgroup>

        <thead class="darkgrey-back">
            <tr>
                <th class="align-items-center"><span class="align-items-center">Provider Profile</span></th>
                <th class="align-middle" style="padding: 0px !important; text-align: center;">12A</th>
                <th class="align-middle" style="padding: 0px !important; text-align: center;">1A</th>
                <th class="align-middle" style="padding: 0px !important; text-align: center;">2A</th>
                <th class="align-middle" style="padding: 0px !important; text-align: center;">3A</th>
                <th class="align-middle" style="padding: 0px !important; text-align: center;">4A</th>
                <th class="align-middle" style="padding: 0px !important; text-align: center;">5A</th>
                <th class="align-middle" style="padding: 0px !important; text-align: center;">6A</th>
                <th class="align-middle" style="padding: 0px !important; text-align: center;">7A</th>
                <th class="align-middle" style="padding: 0px !important; text-align: center;">8A</th>
                <th class="align-middle" style="padding: 0px !important; text-align: center;">9A</th>
                <th class="align-middle" style="padding: 0px !important; text-align: center;">10A</th>
                <th class="align-middle" style="padding: 0px !important; text-align: center;">11A</th>
                <th class="align-middle" style="padding: 0px !important; text-align: center;">12P</th>
                <th class="align-middle" style="padding: 0px !important; text-align: center;">1P</th>
                <th class="align-middle" style="padding: 0px !important; text-align: center;">2P</th>
                <th class="align-middle" style="padding: 0px !important; text-align: center;">3P</th>
                <th class="align-middle" style="padding: 0px !important; text-align: center;">4P</th>
                <th class="align-middle" style="padding: 0px !important; text-align: center;">5P</th>
                <th class="align-middle" style="padding: 0px !important; text-align: center;">6P</th>
                <th class="align-middle" style="padding: 0px !important; text-align: center;">7P</th>
                <th class="align-middle" style="padding: 0px !important; text-align: center;">8P</th>
                <th class="align-middle" style="padding: 0px !important; text-align: center;">9P</th>
                <th class="align-middle" style="padding: 0px !important; text-align: center;">10P</th>
                <th class="align-middle" style="padding: 0px !important; text-align: center;">11P</th>
                @* @foreach (var hour in Model.Hours)
                {
                <th>@hour</th>
                } *@
            </tr>
        </thead>
        <tbody>
            <tr style="background-color:lightpink">
                <td style="background-color:white;">Coverage</td>
                @for (int i = 0; i < 24; i++)
                {
                    <td></td>
                }
            </tr>
            @foreach (var physician in Model.physicianShifts)
            {
                <tr>
                    <td>
                        <img src="~/document/physician/@physician.PhysicianId/ProfilePhoto.jpg" class="rounded-circle " style="height:30px; width:30px;" alt="phy_profile"/>
                        <span class="laptop">@physician.PhysicianName</span>
                    </td>

                    @for (int tableHour = 0; tableHour < 24; tableHour++)
                    {

                        @if (physician.shiftDetails.Any(shift => shift.Starttime.Hour == tableHour))
                        {

                            Shiftdetail? shift = physician.shiftDetails.FirstOrDefault(shift => shift.Starttime.Hour == tableHour);

                            string statusClass = "";

                            if (shift.Status == 1)
                            {
                                statusClass = "approved-shift-bg";
                            }
                            else if (shift.Status == 2)
                            {
                                statusClass = "pending-shift-bg";
                            }

                            int colspan = shift.Endtime.Hour - shift.Starttime.Hour;
                            if (colspan == 0)
                            {
                                colspan = 1;
                            }
                            else if (shift.Endtime.Minute != 0)
                            {
                                colspan++;
                            }
                            double leftMargin = shift.Starttime.Minute * 100.0 / (60.0 * colspan);
                            double rightMargin;
                            if (shift.Endtime.Minute != 0)
                            {
                                rightMargin = (60 - shift.Endtime.Minute) * 100.0 / (60.0 * colspan);
                            }
                            else
                            {
                                rightMargin = 0;
                            }

                            <td colspan="@colspan" class="p-0">

                                <div style="cursor:pointer;margin-left:@leftMargin%;margin-right:@rightMargin%;" data-shiftdetailid="@shift.Shiftdetailid" data-physicianid="@physician.PhysicianId" class="@statusClass h-100 view-shift-btn align-content-center">
                                    @shift.Starttime.ToString("hh:mm tt") - @shift.Endtime.ToString("hh:mm tt")
                                </div>

                            </td>

                            tableHour += (colspan - 1);
                        }
                        else
                        {
                            <td>
                                <div class="add-shift-btn"></div>
                            </td>
                        }

                    }
                    @*
                @for (int i = 0; i < Model.Shifts.Count; i++)
                {
                @if (Model.Shifts[i].StartTime.Hour >= TimeOnly.Parse(hour).Hour && Model.Shifts[i].EndTime.Hour <= TimeOnly.Parse(hour).Hour + 1 && Model.Shifts[i].PhysicianId == p.Physicianid)
                {
                @if (Model.Shifts[i].Status == 1 && Model.Shifts[i].shiftDate >= DateTime.Now)
                {
                <td class="align-content-center" style="background-color:lightgreen">
                <a data-bs-toggle="modal" data-bs-target="#ViewShiftModal" class="text-light align-content-center">

                <svg fill="#ffffff" height="20px" width="20px" version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" xmlns:xlink="http://www.w3.org/1999/xlink" enable-background="new 0 0 512 512">
                <g>
                <path d="m494.8,241.4l-50.6-49.4c-50.1-48.9-116.9-75.8-188.2-75.8s-138.1,26.9-188.2,75.8l-50.6,49.4c-11.3,12.3-4.3,25.4 0,29.2l50.6,49.4c50.1,48.9 116.9,75.8 188.2,75.8s138.1-26.9 188.2-75.8l50.6-49.4c4-3.8 11.7-16.4 0-29.2zm-238.8,84.4c-38.5,0-69.8-31.3-69.8-69.8 0-38.5 31.3-69.8 69.8-69.8 38.5,0 69.8,31.3 69.8,69.8 0,38.5-31.3,69.8-69.8,69.8zm-195.3-69.8l35.7-34.8c27-26.4 59.8-45.2 95.7-55.4-28.2,20.1-46.6,53-46.6,90.1 0,37.1 18.4,70.1 46.6,90.1-35.9-10.2-68.7-29-95.7-55.3l-35.7-34.7zm355,34.8c-27,26.3-59.8,45.1-95.7,55.3 28.2-20.1 46.6-53 46.6-90.1 0-37.2-18.4-70.1-46.6-90.1 35.9,10.2 68.7,29 95.7,55.4l35.6,34.8-35.6,34.7z" />
                </g>
                </svg>
                </a>
                </td>
                }
                else if (Model.Shifts[i].Status == 1 && Model.Shifts[i].shiftDate <= DateTime.Now)
                {
                <td class="align-content-center" style="background-color:lightgreen">
                <a class="text-light align-content-center">

                <svg fill="#ffffff" height="20px" width="20px" version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" xmlns:xlink="http://www.w3.org/1999/xlink" enable-background="new 0 0 512 512">
                <g>
                <path d="m494.8,241.4l-50.6-49.4c-50.1-48.9-116.9-75.8-188.2-75.8s-138.1,26.9-188.2,75.8l-50.6,49.4c-11.3,12.3-4.3,25.4 0,29.2l50.6,49.4c50.1,48.9 116.9,75.8 188.2,75.8s138.1-26.9 188.2-75.8l50.6-49.4c4-3.8 11.7-16.4 0-29.2zm-238.8,84.4c-38.5,0-69.8-31.3-69.8-69.8 0-38.5 31.3-69.8 69.8-69.8 38.5,0 69.8,31.3 69.8,69.8 0,38.5-31.3,69.8-69.8,69.8zm-195.3-69.8l35.7-34.8c27-26.4 59.8-45.2 95.7-55.4-28.2,20.1-46.6,53-46.6,90.1 0,37.1 18.4,70.1 46.6,90.1-35.9-10.2-68.7-29-95.7-55.3l-35.7-34.7zm355,34.8c-27,26.3-59.8,45.1-95.7,55.3 28.2-20.1 46.6-53 46.6-90.1 0-37.2-18.4-70.1-46.6-90.1 35.9,10.2 68.7,29 95.7,55.4l35.6,34.8-35.6,34.7z" />
                </g>
                </svg>
                </a>
                </td>
                }

                else
                {
                <td style="background-color:lightpink">
                <a class="text-light">
                <svg fill="#ffffff" height="20px" width="20px" version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" xmlns:xlink="http://www.w3.org/1999/xlink" enable-background="new 0 0 512 512">
                <g>
                <path d="m494.8,241.4l-50.6-49.4c-50.1-48.9-116.9-75.8-188.2-75.8s-138.1,26.9-188.2,75.8l-50.6,49.4c-11.3,12.3-4.3,25.4 0,29.2l50.6,49.4c50.1,48.9 116.9,75.8 188.2,75.8s138.1-26.9 188.2-75.8l50.6-49.4c4-3.8 11.7-16.4 0-29.2zm-238.8,84.4c-38.5,0-69.8-31.3-69.8-69.8 0-38.5 31.3-69.8 69.8-69.8 38.5,0 69.8,31.3 69.8,69.8 0,38.5-31.3,69.8-69.8,69.8zm-195.3-69.8l35.7-34.8c27-26.4 59.8-45.2 95.7-55.4-28.2,20.1-46.6,53-46.6,90.1 0,37.1 18.4,70.1 46.6,90.1-35.9-10.2-68.7-29-95.7-55.3l-35.7-34.7zm355,34.8c-27,26.3-59.8,45.1-95.7,55.3 28.2-20.1 46.6-53 46.6-90.1 0-37.2-18.4-70.1-46.6-90.1 35.9,10.2 68.7,29 95.7,55.4l35.6,34.8-35.6,34.7z" />
                </g>
                </svg>
                </a>
                </td>

                }
                count2 = count + 1;
                }
                }
                @if (count2 == count)
                {
                <td></td>
                } *@







                </tr>
            }
        </tbody>
    </table>
</div>


<script>

    $('.view-shift-btn').click(function () {

        var sDetailId = $(this).data("shiftdetailid");
        console.log('shift detail id: ' + sDetailId);

        var phyId = $(this).data("physicianid");
        console.log('phy id: ' + phyId);

        $.ajax({
            url: "/Admin/ViewShiftModal",
            data: { shiftDetailId: sDetailId, physicianId: phyId },
            type: 'GET',
            success: function (result) {
                $('#modal-div').html(result);
                $('#viewShiftModal').modal('show');
            },
            error: function (error) {
                console.log(error);
                alert('Error Cancelling Request')
            },
        });

    });


    $('#viewShift-save-btn').click(function () {
        debugger;
        console.log('view save btn');
        var phyid = $('#physicianList2').val();
        console.log(phyid);
        var shift = $('#EditshiftId').val();
        console.log(shift);
        var start = $('#EditshiftstartTime').val();
        console.log(start);

        var end = $('#EditshiftendTime').val();
        console.log(end);
        var shiftdate = $('#Editshiftdate').val();


        $.ajax({
            url: "/Admin/EditShift",
            data: { shiftId: shift, startTime: start, endTime: end, date: shiftdate },
            type: 'POST',
            success: function (result) {
                location.reload();
            },
            error: function (error) {
                console.log(error);
                alert('Error Cancelling Request')
            },
        });
    });

</script>