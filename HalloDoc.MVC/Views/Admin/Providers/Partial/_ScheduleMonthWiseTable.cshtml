@model ShiftMonthViewModel

<style>
    td {
        height: 50px;
        text-align: center;
    }

    .row-header {
        background-color: #fdfa72 !important;
    }

</style>

<div class="p-0 week-wise-table container-fluid mt-4">

    <table class=" p-0 table mt-4  table-bordered">

        <colgroup>
            @for (int i = 0; i < 7; i++)
            {
                <col span="1" style="width: 14.29%;">
            }
        </colgroup>

        <thead class="p-0" style="background-color: dimgrey;">

            <tr class="">
                <th class="text-uppercase text-white" style="text-align: center">Sun</th>
                <th class="text-uppercase text-white" style="text-align: center">Mon</th>
                <th class="text-uppercase text-white" style="text-align: center">Tue</th>
                <th class="text-uppercase text-white" style="text-align: center">Wed</th>
                <th class="text-uppercase text-white" style="text-align: center">Thu</th>
                <th class="text-uppercase text-white" style="text-align: center">Fri</th>
                <th class="text-uppercase text-white" style="text-align: center">Sat</th>
            </tr>

        </thead>

        <tbody>

            @{
                int monthDaysCounter = 1; // will increase after all rows for each week are printed
                int rowsForEachDay = 4; // rows to show for each day - including the header
                int tempCounter = 1; // will increase for each day in week
            }

            @for (int row = 0; row < rowsForEachDay; row++)
            {
                tempCounter = monthDaysCounter;
                <tr>

                    @for (int tableDayOfWeek = 0; tableDayOfWeek < 7; tableDayOfWeek++)
                    {

                        @if ((DayOfWeek)tableDayOfWeek < Model.StartDate.DayOfWeek)
                        {
                            <td></td>
                            continue;
                        }

                        if (row == 0)
                        {
                            <td class="row-header">@tempCounter</td>
                            tempCounter++;
                            continue;
                        }

                        DateTime tableDate = Model.StartDate.AddDays(tempCounter - 1);

                        IEnumerable<Shiftdetail> shifts = Model.shiftDetails.Where(shift => shift.Shiftdate == tableDate).Skip(row - 1);
                        Shiftdetail? shift = shifts.FirstOrDefault();

                        if (shift != null)
                        {

                            string statusClass = "";

                            if (shift.Status == 1)
                            {
                                statusClass = "approved-shift-bg";
                            }
                            else if (shift.Status == 2)
                            {
                                statusClass = "pending-shift-bg";
                            }

                            <td data-shiftdetailid="@shift.Shiftdetailid" style="cursor:pointer;" class="@statusClass view-shift-btn">
                                @shift.Starttime - @shift.Endtime
                            </td>

                        }
                        else
                        {
                            <td class=""></td>
                        }

                        tempCounter++;


                    }
                </tr>
            }

            @{
                monthDaysCounter = tempCounter;
            }

            @while (monthDaysCounter <= Model.DaysInMonth)
            {

                @for (int row = 0; row < rowsForEachDay; row++)
                {
                    tempCounter = monthDaysCounter;

                    <tr>
                        @for (int tableDayOfWeek = 0; tableDayOfWeek < 7; tableDayOfWeek++)
                        {

                            DateTime tableDate = Model.StartDate.AddDays(tempCounter - 1);
                            @if (tempCounter <= Model.DaysInMonth)
                            {

                                if (row == 0)
                                {
                                    <td class="row-header">@tempCounter</td>
                                    tempCounter++;
                                    continue;
                                }


                                var shifts = Model.shiftDetails.Where(shift => shift.Shiftdate == tableDate).Skip(row - 1);

                                if (row == (rowsForEachDay - 1) && shifts.Count() > 1)
                                {
                                    <td>
                                        <button class="view-all-btn btn text-info p-0 m-0" data-date="@tableDate.Day" data-month="@tableDate.Month" data-year="@tableDate.Year">View All</button>
                                    </td>
                                    tempCounter++;
                                    continue;
                                }

                                Shiftdetail? shift = shifts.FirstOrDefault();

                                if (shift != null)
                                {

                                    string statusClass = "";

                                    if (shift.Status == 1)
                                    {
                                        statusClass = "approved-shift-bg";
                                    }
                                    else if (shift.Status == 2)
                                    {
                                        statusClass = "pending-shift-bg";
                                    }

                                    <td data-shiftdetailid="@shift.Shiftdetailid" style="cursor:pointer;" class="@statusClass view-shift-btn">
                                        @shift.Starttime - @shift.Endtime
                                    </td>
                                }
                                else
                                {
                                    <td></td>
                                }

                                tempCounter++;

                            }
                            else
                            {
                                <td></td>
                            }

                        }
                    </tr>
                }
                monthDaysCounter = tempCounter;
            }



        </tbody>

    </table>

</div>



<script>

    $('td').addClass('align-middle');

    $('.view-all-btn').click(function () {

        let tableDate = $(this).data("date");
        let tableMonth = $(this).data("month");
        let tableYear = $(this).data("year");

        // month adjusted for 1st indexed month in c# to 0 indexed month in js
        currentDate = new Date(tableYear, (tableMonth - 1), tableDate);

        $('#day-wise-schedule-btn').click();

    });

    $('.view-shift-btn').click(function () {

        var sDetailId = $(this).data("shiftdetailid");
        console.log('shift detail id: ' + sDetailId);

        $.ajax({
            url: "/Admin/ViewShiftModal",
            data: { shiftDetailId: sDetailId },
            type: 'GET',
            success: function (result) {
                $('#modal-div').html(result);
                $('#viewShiftModal').modal('show');
            },
            error: function (error) {
                console.log(error);
                alert('Error Cancelling Request')
            },
        });

    });

</script>

<script>

    function loadViewShift(sDetailId) {

        $.ajax({
            url: "/Admin/ViewShiftModal",
            data: { shiftDetailId: sDetailId },
            type: 'GET',
            success: function (result) {
                $('#modal-div').html(result);
                $('#viewShiftModal').modal('show');
            },
            error: function (error) {
                console.log(error);
                alert('Error Cancelling Request')
            },
        });
    }

    function loadAddShift(dateStr) {

        $.ajax({
            url: "/Admin/AddShiftModal",
            data: { dateString: dateStr },
            type: 'GET',
            success: function (result) {
                $('#modal-div').html(result);
                $('#viewShiftModal').modal('show');
            },
            error: function (error) {
                console.log(error);
                alert('Error Cancelling Request')
            },
        });
    }

</script>