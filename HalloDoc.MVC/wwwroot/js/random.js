//<div class="offcanvas offcanvas-end" tabindex="-1" id="offcanvasRight" aria-labelledby="offcanvasRightLabel">//    <div class="offcanvas-header bg-info">//        <div class="d-flex">//            <img id="providerImage" src="" alt="Provider Image" width="40">//            <p id="physicianName"></p>//        </div>//        <button type="button" class="btn-close text-reset btn-close-white" data-bs-dismiss="offcanvas" aria-label="Close"></button>//    </div>//    <div class="offcanvas-body">//        <div class="d-flex flex-column justify-content-between h-100">//            <div></div>//            <div class="w-100 row gap-2 ps-3">//                <ul id="chats"></ul>//                <input id="userMessage" type="text" class="col-8"/>//                <input type="button" id="sendMessage" class="col-3" value="Send" />//                <input type="hidden" id="receiverId" />//            </div>//        </div>//    </div>//</div>// Function to set up SignalR connection and event handlersfunction setupSignalRConnection() {    // Define connection variable    const connection = new signalR.HubConnectionBuilder()        .withUrl("/chatHub")        .withAutomaticReconnect() // Enable automatic reconnection        .build();    // Define event handlers    // Event handler for ReceiveMessage    function receiveMessageHandler(user, message) {        console.log(aspNetId);        console.log(user);        if (user === aspNetId || user === "You") {            const msg = message.replace(/&/g, "&").replace(/</g, "<");            var encodedMsg;            if (user === "You") {                encodedMsg = user + " : " + msg;            } else {                encodedMsg = "Sender : " + msg;            }            const li = document.createElement("li");            li.textContent = encodedMsg;            document.getElementById("chats").appendChild(li);            console.log(user, message);        }    }    // Attach event handlers    connection.on("ReceiveMessage", receiveMessageHandler);    // Event handler for receiving close event    connection.onclose(function (error) {        console.log("Connection closed:", error);        // Attempt to reconnect        startConnection();    });    // Event listener for sendMessage button    document.getElementById("sendMessage").addEventListener("click", event => {        const message = document.getElementById("userMessage").value;        const receiverId = document.getElementById("receiverId").value; // Assuming there's an input field for receiver ID        document.getElementById("userMessage").value = "";        if (receiverId) {            connection.invoke("SendMessage", receiverId, message).catch(err => console.error(err.toString()));            console.log("Message Sent");        } else {            console.error("Receiver ID is missing.");        }        event.preventDefault();    });    // Function to start the connection    function startConnection() {        connection.start().then(function () {            console.log("SignalR connected");        }).catch(function (err) {            console.error("Error starting SignalR connection:", err.toString());            // Retry after a delay            setTimeout(startConnection, 10000); // Retry after 10 seconds        });    }    // Start the connection    startConnection();    // Return event handler function to detach later if needed    return receiveMessageHandler;}// Store reference to event handler to detach latervar receiveMessageHandler = null;// Show offcanvasRight event handler$('#offcanvasRight').on('shown.bs.offcanvas', function (event) {    var button = $(event.relatedTarget);    debugger    var physicianId = button.data('bs-physician-id');    aspNetId = button.data('bs-aspnetid'); // Set aspNetId    $('#receiverId').val(aspNetId);    showLoaderFlag = false;    excludeLoader = true;    if (physicianId > 0) {        $.ajax({            method: "GET",            url: "/AdminDashboard/ChatPerSonDetails",            data: { physicianId: physicianId },            success: function (data) {                $('#physicianName').text(data.firstname);                $('#providerImage').attr('src', '/PhysicianUploads/' + physicianId + '/' + data.photo);            }        });        $('#physicianIdDisplay').val(physicianId);    }        // Detach previous event handler if exists    if (receiveMessageHandler !== null) {        connection.off("ReceiveMessage", receiveMessageHandler);    }    // Set up SignalR connection and event handlers after setting aspNetId    receiveMessageHandler = setupSignalRConnection();});// Event handler to clear chat when offcanvas is hidden$('#offcanvasRight').on('hide.bs.offcanvas', function () {    document.getElementById("chats").innerHTML = "";});